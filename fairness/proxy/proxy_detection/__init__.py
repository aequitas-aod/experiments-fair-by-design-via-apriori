import pandas as pd
from apyori import apriori


def return_proxy_variables(dataset: pd.DataFrame, confidence_threshold: float = 0.8) -> pd.DataFrame:
    """This method returns the proxy variables given a certain dataset and a confidence threshold
    through the apriori algorithm for the association rule
    Args:
        dataset: pd.DataFrame: the dataset on which perform the association rule mining
        confidence_threshold: float: is the confidence threshold needed for the apriori algorithm

    Returns: pd.DataFrame: returns the dataframe of the proxy variable. The dataframe is in the form (Antecedent,
    Consequent, Confidence)
    """
    records = _return_apriori_dataset_format(dataset)
    association_rules = apriori(records, min_confidence=confidence_threshold)
    association_results = list(association_rules)
    return _return_apriori_dataframe(association_results)


def _return_apriori_dataframe(association_results: list) -> pd.DataFrame:
    """This function returns the dataframe with the association generated by the apriori algorithm

    Args:
        association_results (list): is the list of the association returned by the apriori algorithm

    Returns:
        pd.DataFrame: is the dataframe equivalent to the association result list
    """
    antecedent = []
    consequent = []
    confidence = []

    for association_result in association_results:
        for ordered_statistic in association_result.ordered_statistics:
            antecedent_elements = list(ordered_statistic.items_base)
            antecedent.append(antecedent_elements)
            consequent_elements = list(ordered_statistic.items_add)
            consequent.append(consequent_elements)
            confidence_elements = ordered_statistic.confidence
            confidence.append(confidence_elements)

    antecedent_series = pd.Series(antecedent)
    consequent_series = pd.Series(consequent)
    confidence_series = pd.Series(confidence)

    dataframe = pd.DataFrame(
        {'Antecedent': antecedent_series, 'Consequent': consequent_series, 'Confidence': confidence_series})
    
    print(dataframe)

    return dataframe


def _return_apriori_dataset_format(dataset: pd.DataFrame) -> list:
    """
    This method returns the dataset in the format required by the apriori algorithm implemented by apyori
    :param dataset: the dataset on which compute the apriori algorithm to find the association rules
    :return: returns the list associated to the dataframe
    """
    records = []
    for i in range(len(dataset)):
        records.append(
            [str(dataset.columns[j] + " = " + str(dataset.values[i, j])) for j in range(len(dataset.columns) - 1)])

    return records
